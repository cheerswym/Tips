syntax = "proto2";

package qcraft;
option go_package = "qcraft-proto.ai/onboard/planner/router/proto/route_params";

message RouteMatchFilter {
  optional double radius_error = 1;
  optional double heading_error = 2;
  optional bool motoway_only = 3;  // default true
}

message RouteMatchSort {
  optional double dist_weight = 1;
  optional double heading_weight = 2;  // rad diff
}

enum RouteMatchType {
  STATIONARY = 1;
  VIA_POINT = 2;
  DRIVING = 3;
}

message RouteMapMatchParam {
  optional RouteMatchFilter filter = 1;
  optional RouteMatchSort sorter = 2;
  optional RouteMatchType match_type = 3;
}

message RouteBlacklistCostParam {
  optional double base_cost = 1;
  optional double cost_per_meters = 2;
}

message TurnCostParam {
  optional double u_turn = 1;
  optional double left_turn = 2;
  optional double right_turn = 3;
  optional double infeasible_u_turn = 4;
}

message RouteCostParam {
  optional TurnCostParam turn_cost = 1;
  optional RouteBlacklistCostParam blacklist = 2;
}

message RouteParamProto {
  optional RouteMapMatchParam poi_match_param = 1;   // stop point
  optional RouteMapMatchParam on_driving_param = 3;  // driving
  optional RouteCostParam cost_param = 4;            // route search cost

  // basic map param
  optional double default_lane_width = 5;

  reserved 2;
}