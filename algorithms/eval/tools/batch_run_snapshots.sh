#!/bin/bash

# A tool to run a batch of snapshots and dump their output to the specified directory.

set -e

function print_usage() {
  echo -e "Usage:\n  $0 -i input_file -o output_dir\n"
  echo -e "Required:\n  --input, -i:  path to the input file in csv format, which can be generated by query_by_qevent_field.py."
  echo -e "  --output, -o: directory where the generated planner output should be written to."
}

if [ "$#" -eq 0 ]; then
  print_usage
  exit 1
fi

while [[ $# -gt 0 ]]; do
  opt="$1"
  case "${opt}" in
    -i | --input)
      input_file="$2"
      shift 2
      ;;
    -o | --output)
      output_dir="$2"
      shift 2
      ;;
    -h | --help)
      print_usage
      exit 1
      ;;
    *)
      if [[ "${opt}" == -* ]]; then
        print_usage
        exit 1
      fi
      ;;
  esac
done

mkdir -p ${output_dir}

while IFS=, read -r runname timestamp; do
  dump_output="$(GLOG_minloglevel=3 bazel run -c opt offboard/tools/snapshot:dump_snapshot -- \
    --run=${runname} --timestamp=${timestamp} --backward)"

  IFS=$' '
  snapshot_dir=$(echo "${dump_output}" | awk -F ' ' '{print $1}')
  unset IFS
  echo "Snapshot of ${runname} at ${timestamp} dumped to ${snapshot_dir}."

  planner_output_file="${output_dir}/${runname}_${timestamp}.bin"
  GLOG_minloglevel=3 bazel run -c opt offboard/tools/snapshot:snapshot_runner -- \
    --snapshot_path=${snapshot_dir} --snapshot_gen_stf=false \
    --dump_snapshot_output="${planner_output_file}"
  echo "Snapshot output written to ${planner_output_file}."
done < <(tail -n +2 "${input_file}")
